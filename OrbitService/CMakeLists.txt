# Copyright (c) 2020 The Orbit Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# To make OrbitAsioServer and OrbitGrpcServer available for fuzz-testing
# the target OrbitServiceLib was introduced. OrbitService still exists,
# but only builds main.cpp and links to OrbitServiceLib.
project(OrbitServiceLib)

add_library(OrbitServiceLib STATIC)
target_compile_options(OrbitServiceLib PRIVATE ${STRICT_COMPILE_FLAGS})

target_sources(OrbitServiceLib PUBLIC
        include/OrbitService/ProducerSideUnixDomainSocketPath.h)

target_sources(OrbitServiceLib PRIVATE
        CaptureEventBuffer.h
        CaptureEventSender.h
        CaptureServiceImpl.cpp
        CaptureServiceImpl.h
        CaptureStartStopListener.h
        CrashServiceImpl.cpp
        CrashServiceImpl.h
        FramePointerValidatorServiceImpl.cpp
        FramePointerValidatorServiceImpl.h
        LinuxTracingHandler.cpp
        LinuxTracingHandler.h
        OrbitGrpcServer.cpp
        OrbitGrpcServer.h
        OrbitService.cpp
        OrbitService.h
        Process.cpp
        Process.h
        ProcessList.cpp
        ProcessList.h
        ProcessServiceImpl.cpp
        ProcessServiceImpl.h
        ProducerSideServer.cpp
        ProducerSideServer.h
        ProducerSideServiceImpl.cpp
        ProducerSideServiceImpl.h
        TracepointServiceImpl.h
        TracepointServiceImpl.cpp
        ServiceUtils.cpp
        ServiceUtils.h)

if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
  set_target_properties(OrbitServiceLib PROPERTIES COMPILE_FLAGS /wd4127)
endif()

target_include_directories(OrbitServiceLib PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

target_include_directories(OrbitServiceLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})

target_link_libraries(OrbitServiceLib PUBLIC
        ElfUtils
        OrbitFramePointerValidator
        OrbitLinuxTracing
        OrbitProtos
        OrbitVersion)

project(OrbitService)
add_executable(OrbitService main.cpp)
target_link_libraries(OrbitService PRIVATE OrbitServiceLib)
target_compile_options(OrbitService PRIVATE ${STRICT_COMPILE_FLAGS})

strip_symbols(OrbitService)

add_executable(OrbitServiceTests)
target_compile_options(OrbitServiceTests PRIVATE ${STRICT_COMPILE_FLAGS})

target_sources(OrbitServiceTests PRIVATE ProcessListTest.cpp
                                         ProcessTest.cpp
                                         ServiceUtilsTest.cpp)

target_link_libraries(OrbitServiceTests PRIVATE 
        OrbitServiceLib
        GTest::Main)

add_custom_command(TARGET OrbitServiceTests POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_LIST_DIR}/testdata
        $<TARGET_FILE_DIR:OrbitServiceTests>/testdata)

register_test(OrbitServiceTests PROPERTIES TIMEOUT 10)

add_fuzzer(OrbitServiceUtilsFindSymbolsFilePathFuzzer
           OrbitServiceUtilsFindSymbolsFilePathFuzzer.cpp)
target_link_libraries(OrbitServiceUtilsFindSymbolsFilePathFuzzer PRIVATE OrbitServiceLib)
